Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

solution 1:

class Solution:
    def twoSum(self,nums,target):
        if len(nums)<=1:
            return False
        buff_dict = {} #声明一个空字典
        for i in range(len(nums)):
            if num[i] in buff_dict:
                return [buff_dict[num[i]],i]
            else:
                buff_dict[target-num[i]]=i
                
                
知识点;
dict(),keys,values
问题：
时间复杂度：o(N)
解决问题：一个序列中求解两个不同索引的值的和，动态生成一个“值”：“索引”的键值对
            
#for i in range(len(nums)-1):
#    for j in range(i+1,len(nums)):
#        if nums[i]+nums[j]==target:
#            return [i,j]
#return None
